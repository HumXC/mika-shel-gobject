name: "Release"
on:
  pull_request:
  push:
permissions:
  contents: write
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: nix develop -c zig build codegen

      - name: Package bindings
        run: tar -czf bindings.tar.gz -C zig-out bindings

      - name: Delete Old Releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tags=$(gh release list --json tagName --jq '.[].tagName' | grep latest || true)
          echo "$tags" | xargs --no-run-if-empty -I {} gh release delete {} --yes
          echo "$tags" | xargs --no-run-if-empty -I {} gh api --method DELETE /repos/${{ github.repository }}/git/refs/tags/{}
          sleep 5

      - name: Get Latest Commit Hash
        id: commit
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: latest
          name: "Latest Release (${{ env.sha_short }})"
          body: "自动发布于 commit: ${{ env.sha_short }}"
          draft: false
          prerelease: false
          files: |
            bindings.tar.gz
